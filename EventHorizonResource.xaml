<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="clr-namespace:FontAwesome.WPF;assembly=FontAwesome.WPF">

    <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
       <Setter Property="Template">
           <Setter.Value>
               
               <ControlTemplate TargetType="ToggleButton">
                   <Grid>
                       
                       <Grid.ColumnDefinitions>
                           <ColumnDefinition />
                           <ColumnDefinition Width="32" />
                       </Grid.ColumnDefinitions>

                        <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="#3b71ca" BorderThickness="1"/>
                       
                       <Path x:Name="Arrow" Grid.Column="1" Fill="{TemplateBinding Foreground}" Stroke="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                       
                   </Grid>
                   
               </ControlTemplate>
               
           </Setter.Value>
       </Setter>
    </Style>
    
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="True"/>
    </ControlTemplate>

    <Style x:Key="theComboBox" TargetType="{x:Type ComboBox}">

        <Setter Property="Foreground" Value="#333" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="Background" Value="White" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="FontSize" Value="13" />
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="MinHeight" Value="35"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    
                    <Grid>
                        
                        <ToggleButton Cursor="Hand" Name="ToggleButton" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Foreground="White"
                            Style="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="10,3,30,3" VerticalAlignment="Center" HorizontalAlignment="Left" />

                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" SelectionBrush="Transparent" Foreground="White" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Center"
                            Margin="3,0,23,0" Focusable="True" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">

                                <Border CornerRadius="8" x:Name="DropDownBorder" Background="White" BorderThickness="1" BorderBrush="#F6F6F6"/>
                                
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                                
                            </Grid>
                            
                        </Popup>
                        
                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
        </Style.Triggers>

    </Style>

    <Style x:Key="FrequencyComboBoxStyle" TargetType="{x:Type ComboBox}">

        <Setter Property="Foreground" Value="#333" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="Background" Value="White" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="MinWidth" Value="140"/>
        <Setter Property="MinHeight" Value="28"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">

                    <Grid>

                        <ToggleButton Cursor="Hand" Name="ToggleButton" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Foreground="#3b71ca"
                            Style="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>

                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="10,3,30,3" VerticalAlignment="Center" HorizontalAlignment="Left" />

                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" SelectionBrush="Transparent" Foreground="#3b71ca" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Center"
                            Margin="3,0,23,0" Focusable="True" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>

                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">

                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">

                                <Border CornerRadius="3" x:Name="DropDownBorder" Background="White" BorderThickness="1" BorderBrush="#F6F6F6"/>

                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>

                            </Grid>

                        </Popup>

                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>

                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>

                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
        </Style.Triggers>

    </Style>

    <Style x:Key="theComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="OverridesDefaultStyle" Value="true"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Name="Border" Padding="5" Margin="2" BorderThickness="2,0,0,0" CornerRadius="0" Background="Transparent" BorderBrush="Transparent">
                        <TextBlock TextAlignment="Left">
                            <ContentPresenter />
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#0047AB"/>
                            <Setter TargetName="Border" Property="Background" Value=" #331E90FF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="FKeysButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#55003a72"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="105"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10" BorderThickness="0" BorderBrush="DodgerBlue" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#0068cd"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#003a72"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->
    <Style x:Key="EventHorizonButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#66ffffff"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="105"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Margin" Value="10,6,6,6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#1b3866"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#0068cd"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="OracleButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#3b71ca"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="105"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="10,6,6,6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#1b3866"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#0068cd"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="LightSlateGray"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,2,0"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0" BorderThickness="0" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#0068cd"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RepliesButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#55003a72"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="3" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#003a72"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#0068cd"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Margin" Value="0,0,2,0"/>
        <Setter Property="FontWeight" Value="Medium"/>
    </Style>

    <Style x:Key="DefaultButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Direction="320" ShadowDepth="1" Opacity="0.6"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#3b71ca"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="3" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Firebrick"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Green"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TreeViewItemTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Tahoma"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0,-1,0,0"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="#20000000"/>
            </Trigger>
        </Style.Triggers>-->
    </Style>
    
    <Style x:Key="TreeViewToggleButton" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="FontFamily" Value="sans serif"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#6FFFFFFF"/>
                <Setter Property="Background" Value="#29000000"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="#49000000"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TreeViewIconGridStyle" TargetType="Grid">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Margin" Value="2,2,12,2"/>
    </Style>
    <Style x:Key="TreeViewIconTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="pack://application:,,,/fonts/#FontAwesome"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="TreeViewHeaderTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Tahoma"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="40,7,2,2"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
    </Style>
    <Style x:Key="TreeViewNumberOfTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Tahoma"/>
        <Setter Property="Padding" Value="0"/>
        <!--<Setter Property="Margin" Value="2,0,0,0"/>-->
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <!--<Setter Property="Opacity" Value="0.3"/>-->
    </Style>
    <Style x:Key="VisualTreeViewItemListView" TargetType="{x:Type ListViewItem}">
        <Setter Property="Height" Value="22"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Black"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Black"/>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#29000000"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="VisualTreeViewListView" TargetType="{x:Type ListView}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource VisualTreeViewItemListView}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <ScrollViewer>
                        <ItemsPresenter />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ArduButtonLabel" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Tahoma"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0,-2,0,0"/>
        <Setter Property="Width" Value="90"/>
    </Style>
    <Style x:Key="ArduButtonIconStackPanel" TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="0,1,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="ArduVerticalButtonStackPanel" TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="0,0,0,20"/>
        <Setter Property="Orientation" Value="Vertical"/>
    </Style>
    
    <Style x:Key="ArduButtonIcon" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="pack://application:,,,/fonts/#FontAwesome"/>
        <!--<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}, AncestorLevel=1}, Path=BorderBrush}"/>-->
        <Setter Property="FontSize" Value="32"/>
        <!--<Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="60"/>-->
        <!--<Setter Property="Margin" Value="0,15,0,0"/>-->
        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                -->
        <!--<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}, AncestorLevel=1}, Path=Foreground}"/>-->
        <!--<Setter Property="Foreground" Value="Goldenrod"/>-->
        <!--
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <Style x:Key="DocumentViewerStyle" TargetType="{x:Type DocumentViewer}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DocumentViewer}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Focusable="False">
                        <Grid KeyboardNavigation.TabNavigation="Local">

                            <Grid.Background>
                                <SolidColorBrush Color="Transparent" />
                            </Grid.Background>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <ScrollViewer Grid.Row="0" CanContentScroll="true" HorizontalScrollBarVisibility="Auto" x:Name="PART_ContentHost" IsTabStop="true" Margin="10,-20,10,10"/>

                            <ContentControl Grid.Row="1" x:Name="PART_FindToolBarHost"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EventTypeTokenFunctionKeyHelpReport_BorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="Width" Value="31"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Background" Value="DodgerBlue"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Grayscale"/>
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
        <!--<Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="DarkSlateGray" Opacity="1" ShadowDepth="1.5" Direction="140" BlurRadius="0.5"/>
            </Setter.Value>
        </Setter>-->
    </Style>
    <Style x:Key="EventTypeTokenFunctionKey_BorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="Width" Value="31"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Background" Value="DodgerBlue"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Grayscale"/>
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="DarkSlateGray" Opacity="1" ShadowDepth="1.5" Direction="140" BlurRadius="0.5"/>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="EventTypeToken_BorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Background" Value="DodgerBlue"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Opacity="1" ShadowDepth="1" Direction="320" BlurRadius="0.5"/>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EventTypeToken_FontAwesomeStyle" TargetType="{x:Type fa:FontAwesome}">
        <Setter Property="Margin" Value="0,5,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="EventTypeText_TextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="Width" Value="144"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="MaxWidth" Value="144"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style x:Key="EllipseToken_GridStyle" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="5,1,5,0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Opacity="1" ShadowDepth="1" Direction="320" BlurRadius="0.5"/>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EllipseToken_EllipseStyle" TargetType="{x:Type Ellipse}">
        <Setter Property="Width" Value="26"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Fill" Value="Pink"/>
    </Style>
    <Style x:Key="EllipseToken_LabelStyle" TargetType="{x:Type Label}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

</ResourceDictionary>